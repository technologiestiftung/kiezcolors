export default function () {
  const berlin = {
    type: "FeatureCollection",
    features: [
      {
        type: "Feature",
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [13.152387, 52.5704632],
              [13.1442207, 52.5521165],
              [13.1363322, 52.5527073],
              [13.1305013, 52.5560119],
              [13.1192457, 52.5293824],
              [13.1173799, 52.51706],
              [13.1414945, 52.5196148],
              [13.1688227, 52.5092271],
              [13.1283335, 52.4798205],
              [13.1176933, 52.4773203],
              [13.1105565, 52.4656575],
              [13.1120282, 52.4544135],
              [13.109295, 52.4506349],
              [13.1231211, 52.439615],
              [13.1120738, 52.4323102],
              [13.1127834, 52.4291958],
              [13.088345, 52.4196325],
              [13.0907635, 52.4115602],
              [13.0973918, 52.4094186],
              [13.0989797, 52.4108704],
              [13.1070818, 52.4098699],
              [13.1118193, 52.4039855],
              [13.1247813, 52.3968694],
              [13.1325231, 52.3986632],
              [13.1382291, 52.3957028],
              [13.1418185, 52.3970996],
              [13.1588692, 52.393939],
              [13.1687694, 52.3943952],
              [13.1693201, 52.3974482],
              [13.1577955, 52.3963564],
              [13.1593543, 52.4028628],
              [13.1966703, 52.4153154],
              [13.2250586, 52.4210782],
              [13.2459511, 52.4211746],
              [13.2497797, 52.4049794],
              [13.275822, 52.4051964],
              [13.2959288, 52.4145035],
              [13.3120638, 52.3991062],
              [13.3433453, 52.411724],
              [13.3430551, 52.407686],
              [13.3719482, 52.3937967],
              [13.3703524, 52.3884274],
              [13.3872981, 52.3885717],
              [13.3884283, 52.3778616],
              [13.4208126, 52.3761384],
              [13.42746, 52.3857818],
              [13.4187486, 52.4099774],
              [13.4635491, 52.4210797],
              [13.4680167, 52.4200319],
              [13.4797604, 52.3959454],
              [13.516005, 52.4017887],
              [13.5296951, 52.3973033],
              [13.5370584, 52.399988],
              [13.5354929, 52.3889916],
              [13.5641574, 52.3881358],
              [13.5926921, 52.3938149],
              [13.5961197, 52.3859848],
              [13.6063974, 52.3791178],
              [13.6073619, 52.3739778],
              [13.6285136, 52.381356],
              [13.6332183, 52.3762468],
              [13.6426777, 52.3775085],
              [13.6420982, 52.3708105],
              [13.6468297, 52.3701562],
              [13.6461014, 52.3652758],
              [13.6390827, 52.3609791],
              [13.6363196, 52.3468193],
              [13.6428165, 52.3399413],
              [13.6488471, 52.3383381],
              [13.657088, 52.3516163],
              [13.6718256, 52.3667857],
              [13.6821489, 52.3696395],
              [13.6872201, 52.3673007],
              [13.6926788, 52.3688186],
              [13.6999584, 52.3755917],
              [13.6972122, 52.3774414],
              [13.6988099, 52.3811228],
              [13.6897211, 52.3832555],
              [13.6906057, 52.3854968],
              [13.715869, 52.3996935],
              [13.7225344, 52.3982719],
              [13.7302907, 52.3996681],
              [13.7390343, 52.4073353],
              [13.729807, 52.4163459],
              [13.7310695, 52.4204712],
              [13.7428856, 52.4329383],
              [13.7440755, 52.4380708],
              [13.7505078, 52.4414814],
              [13.756302, 52.4416095],
              [13.7564462, 52.4461766],
              [13.7290816, 52.4507847],
              [13.7159638, 52.4629168],
              [13.7019125, 52.4675365],
              [13.7055858, 52.4576982],
              [13.7046132, 52.4547613],
              [13.6983504, 52.4552612],
              [13.6954345, 52.464186],
              [13.6827773, 52.4660695],
              [13.6672387, 52.4742885],
              [13.6638005, 52.473661],
              [13.648307, 52.4787311],
              [13.6432163, 52.4792245],
              [13.62534, 52.4736998],
              [13.624707, 52.4690567],
              [13.6113673, 52.470652],
              [13.6164854, 52.4748296],
              [13.6135519, 52.4756188],
              [13.6148914, 52.4807613],
              [13.6297148, 52.4930366],
              [13.6240057, 52.4941989],
              [13.6295145, 52.5067221],
              [13.6357831, 52.5142171],
              [13.6585034, 52.5259465],
              [13.6569123, 52.5298379],
              [13.6256871, 52.5301844],
              [13.6248253, 52.5380997],
              [13.6339467, 52.5376518],
              [13.6376506, 52.5409213],
              [13.5874276, 52.5494492],
              [13.5815424, 52.5711074],
              [13.5682686, 52.5737892],
              [13.5618612, 52.5803892],
              [13.5469869, 52.5876432],
              [13.5276937, 52.5922366],
              [13.5081184, 52.5921389],
              [13.4966616, 52.6050272],
              [13.5058558, 52.6257537],
              [13.5178192, 52.6295666],
              [13.523022, 52.6450365],
              [13.5192654, 52.646947],
              [13.512828, 52.6454021],
              [13.4907625, 52.6547958],
              [13.4853597, 52.6594285],
              [13.4884252, 52.6707899],
              [13.4745328, 52.6682226],
              [13.4754875, 52.6750071],
              [13.4659262, 52.6671206],
              [13.4595492, 52.6689779],
              [13.450782, 52.6626681],
              [13.4623824, 52.6575394],
              [13.4735092, 52.6565299],
              [13.4699645, 52.6518641],
              [13.4597316, 52.6480828],
              [13.4408204, 52.6492654],
              [13.4397877, 52.6452681],
              [13.4340061, 52.644282],
              [13.4342584, 52.6379548],
              [13.424374, 52.6355778],
              [13.4122912, 52.6434826],
              [13.4078856, 52.6426845],
              [13.3979077, 52.6481146],
              [13.3945552, 52.647556],
              [13.3892124, 52.6376741],
              [13.3787082, 52.6343547],
              [13.3770211, 52.6293358],
              [13.3571206, 52.6231988],
              [13.3366807, 52.6226513],
              [13.3096974, 52.6294729],
              [13.3061983, 52.6364712],
              [13.3094061, 52.6427257],
              [13.3004321, 52.6535051],
              [13.3100076, 52.6573701],
              [13.3071182, 52.6596202],
              [13.2827678, 52.6607411],
              [13.2838319, 52.6411189],
              [13.2621503, 52.6406872],
              [13.2642342, 52.6268645],
              [13.220689, 52.6278066],
              [13.2068807, 52.609137],
              [13.2016215, 52.6065502],
              [13.2181176, 52.5931898],
              [13.2173951, 52.5874783],
              [13.207338, 52.588376],
              [13.206709, 52.5865996],
              [13.1645286, 52.5987969],
              [13.129342, 52.5859303],
              [13.1326105, 52.579597],
              [13.1496095, 52.5833597],
              [13.1531561, 52.5789454],
              [13.152387, 52.5704632],
            ],
          ],
        },
      },
    ],
  };

  berlin.features.forEach((feature) => {
    if (feature.geometry.type === "Polygon") {
      feature.geometry.coordinates = feature.geometry.coordinates.map((ring) =>
        ring.slice().reverse()
      );
    }
  });

  function smoothCoordinates(coords) {
    let windowSize = 2;

    if (windowSize < 1 || windowSize > coords.length) {
      throw new Error(
        "Invalid windowSize: must be between 1 and the number of coordinates."
      );
    }

    const smoothed = [];
    const halfWindow = Math.floor(windowSize / 2);

    for (let i = 0; i < coords.length; i++) {
      let sumX = 0,
        sumY = 0,
        count = 0;

      // Calculate the average of the neighboring points
      for (let j = -halfWindow; j <= halfWindow; j++) {
        const index = i + j;
        if (index >= 0 && index < coords.length) {
          sumX += coords[index][0];
          sumY += coords[index][1];
          count++;
        }
      }

      smoothed.push([sumX / count, sumY / count]);
    }

    return smoothed;
  }
  berlin.features.forEach((feature) => {
    if (feature.geometry.type === "Polygon") {
      feature.geometry.coordinates =
        feature.geometry.coordinates.map(smoothCoordinates);
    }
  });

  return berlin;
}
